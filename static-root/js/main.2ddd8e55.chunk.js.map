{"version":3,"sources":["logo.svg","lookup/components.js","barks/buttons.js","barks/lookup.js","barks/detail.js","barks/list.js","barks/create.js","barks/components.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backEndLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","response","status","onerror","e","console","log","send","ActionBtn","props","bark","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackEndEvent","type","onClick","event","preventDefault","barkId","id","apiBarkAction","ParentBark","parent","Bark","hideActions","didRebark","useState","actionBark","setActionBark","match","window","location","pathname","urlBarkId","groups","barkid","isDetail","handlePerformAction","newActionBark","content","Fragment","href","BarksList","barksInit","setBarksInit","barks","setBarks","barksDidSet","setBarksDidSet","useEffect","final","newBarks","concat","username","apiBarkList","alert","handleDidRebark","newBark","updateBarksInit","unshift","updateFinalBarks","map","item","index","key","BarkCreate","textAreaRef","React","createRef","didBark","handleBackEndUpdate","onSubmit","newVal","current","value","ref","required","BarksComponent","setNewBarks","canBark","tempNewBarks","BarkDetailComponent","didLookup","setDidLookup","setBark","handleBackEndLookup","apiBarkDetail","App","src","logo","alt","target","rel","Boolean","hostname","appEl","getElementById","ReactDOM","render","createElement","barksEl","dataset","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2ddd8e55.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","function getCookie(name) {\r\n  var cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n      var cookies = document.cookie.split(';');\r\n      for (var i = 0; i < cookies.length; i++) {\r\n          var cookie = cookies[i].trim();\r\n          // Does this cookie string begin with the name we want?\r\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n              break;\r\n          }\r\n      }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nexport function backEndLookup(method, endpoint, callback, data) {\r\n  let jsonData;\r\n  if (data) {\r\n    jsonData = JSON.stringify(data)\r\n  }\r\n  const xhr = new XMLHttpRequest()\r\n  const url = `http://localhost:8000/api${endpoint}`\r\n  xhr.responseType = \"json\"\r\n  const csrftoken = getCookie('csrftoken');\r\n  xhr.open(method, url)\r\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\r\n  if(csrftoken) {\r\n    xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\r\n  }\r\n  xhr.onload = function() {\r\n      callback(xhr.response, xhr.status)\r\n  }\r\n  xhr.onerror = function (e) {\r\n    console.log(e)\r\n    callback({\"message\": \"Request was an error\"}, 400)\r\n  }\r\n  xhr.send(jsonData)\r\n}","import React  from 'react'\r\n\r\nimport {apiBarkAction} from './lookup'\r\n\r\nexport function ActionBtn(props) {\r\n    const {bark, action, didPerformAction} = props\r\n    const likes = bark.likes ? bark.likes : 0\r\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\r\n    const actionDisplay = action.display ? action.display : 'Action'\r\n    const handleActionBackEndEvent = (response, status) => {\r\n        console.log(response, status)\r\n        if((status === 200 || status === 201) && didPerformAction) {\r\n            didPerformAction(response, status)\r\n        }\r\n    }\r\n    const handleClick = (event) => {\r\n        event.preventDefault()\r\n        apiBarkAction(bark.id, action.type, handleActionBackEndEvent)\r\n    }\r\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\r\n    return <button className = {className} onClick = {handleClick}>{display}</button>\r\n  }","import {backEndLookup} from '../lookup'\r\n\r\nexport function apiBarkCreate(newBark, callback) {\r\n    backEndLookup(\"POST\", \"/barks/create/\", callback, {content: newBark})\r\n  \r\n}\r\n \r\nexport function apiBarkAction(barkId, action, callback) {\r\n  const data = {id: barkId, action: action}\r\n  backEndLookup(\"POST\", \"/barks/action/\", callback, data)\r\n\r\n}\r\n\r\nexport function apiBarkDetail(barkId, callback) {\r\n    backEndLookup(\"GET\", `/barks/${barkId}`, callback)\r\n}\r\n\r\nexport function apiBarkList(username, callback) {\r\n  let endpoint = \"/barks/\"\r\n  if(username) {\r\n      endpoint = `/barks/?username=${username}`\r\n  }\r\n    backEndLookup(\"GET\", endpoint, callback)\r\n}","import React , {useState} from 'react'\r\nimport {ActionBtn} from './buttons'\r\n\r\n\r\nexport function ParentBark(props) {\r\n    const {bark} = props\r\n    return bark.parent ? <div className = 'row'>\r\n        <div className = 'col-11 mx-auto p-3 border rounded'>\r\n            <p className = 'mb-0 text-muted small'>Rebark</p>\r\n            <Bark hideActions className = {' '} bark = {bark.parent} />\r\n        </div>\r\n    </div> : null\r\n}\r\n\r\nexport function Bark(props) {\r\n    const {bark, didRebark, hideActions} = props\r\n    const [actionBark, setActionBark] = useState(props.bark ? props.bark : null)\r\n    const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n    const path = window.location.pathname\r\n    const match = path.match(/(?<barkid>\\d+)/)\r\n    const urlBarkId = match ? match.groups.barkid : -1\r\n    const isDetail = `${bark.id}` === `${urlBarkId}`\r\n    const handleLink = (event) => {\r\n        event.preventDefault()\r\n        window.location.href = `/${bark.id}`\r\n    }\r\n    const handlePerformAction = (newActionBark, status) => {\r\n        if(status === 200) {\r\n            setActionBark(newActionBark)\r\n        } else if (status === 201) {\r\n            if(didRebark) {\r\n                didRebark(newActionBark)\r\n            }\r\n        }\r\n    }\r\n\r\n    return <div className={className}>\r\n        <div>\r\n            <p>{bark.id} - {bark.content}</p>\r\n            <ParentBark bark = {bark} />\r\n        </div>\r\n        <div className='btn btn-group'>\r\n            {(actionBark && hideActions !== true) && <React.Fragment>\r\n                <ActionBtn bark = {actionBark} didPerformAction = {handlePerformAction} action={{type: \"like\", display:\"Likes\"}}/>\r\n                <ActionBtn bark = {actionBark} didPerformAction = {handlePerformAction} action={{type: \"unlike\", display:\"Unlike\"}}/>\r\n                <ActionBtn bark = {actionBark} didPerformAction = {handlePerformAction} action={{type: \"rebark\", display:\"Rebark\"}}/>\r\n            </React.Fragment>}\r\n            {isDetail === true ? null : <button className = 'btn btn-sm btn-outline-primary' onClick = {handleLink}>View</button>}\r\n        </div>\r\n    </div>\r\n}","import React , {useEffect, useState} from 'react'\r\nimport {apiBarkList} from './lookup'\r\nimport {Bark} from './detail'\r\n\r\nexport function BarksList(props) {\r\n    const [barksInit, setBarksInit] = useState([])\r\n    const [barks, setBarks] = useState([])\r\n    const [barksDidSet, setBarksDidSet] = useState(false)\r\n    useEffect(() => {\r\n        const final = [...props.newBarks].concat(barksInit)\r\n        if(final.length !== barks.length) {\r\n            setBarks(final)\r\n        }\r\n    }, [props.newBarks, barks, barksInit])\r\n    useEffect(() => {\r\n        if(barksDidSet === false) {\r\n            const handleBarkListLookup =  (response, status) => {\r\n                if(status === 200) {\r\n                    setBarksInit(response)\r\n                    setBarksDidSet(true)\r\n                } else {\r\n                    alert(\"There was an error\")\r\n                }\r\n            }\r\n            apiBarkList(props.username, handleBarkListLookup)\r\n        }\r\n    }, [barksInit, barksDidSet, setBarksDidSet, props.username])\r\n\r\n    const handleDidRebark = (newBark) => {\r\n        const updateBarksInit = [...barksInit]\r\n        updateBarksInit.unshift(newBark)\r\n        setBarksInit(updateBarksInit)\r\n        const updateFinalBarks = [...barks]\r\n        updateFinalBarks.unshift(barks)\r\n        setBarks(updateFinalBarks)\r\n    }\r\n    return barks.map((item, index)=>{\r\n        return <Bark \r\n        bark = {item}\r\n        didRebark = {handleDidRebark} \r\n        className = 'my-5 py-5 border bg-white text-dark' \r\n        key = {`${index}-{item.id}`}/>\r\n    })\r\n}","import React from 'react'\r\nimport {apiBarkCreate} from './lookup'\r\n\r\nexport function BarkCreate(props) {\r\n    const textAreaRef = React.createRef()\r\n    const {didBark} = props\r\n    const handleBackEndUpdate = (response, status) => {\r\n        if(status === 201) {\r\n            didBark(response)\r\n        } else {\r\n            console.log(response)\r\n            alert(\"An error has occurred. Please try again.\")\r\n        }\r\n    }\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        const newVal = textAreaRef.current.value\r\n        apiBarkCreate(newVal, handleBackEndUpdate)\r\n        textAreaRef.current.value = ''\r\n    }\r\n    return <div className ={props.className}>\r\n        <form onSubmit = {handleSubmit}>\r\n            <textarea ref = {textAreaRef} required = {true} className = 'form-control' name = 'tweet'>\r\n\r\n            </textarea>\r\n            <button type = 'submit' className = 'btn btn-primary my-3'>Bark</button>\r\n        </form>\r\n    </div>\r\n}","import React , {useState, useEffect} from 'react'\r\nimport {BarksList} from './list'\r\nimport {BarkCreate} from './create'\r\nimport {apiBarkDetail} from './lookup'\r\nimport {Bark} from './detail'\r\n\r\nexport function BarksComponent(props) {\r\n    const [newBarks, setNewBarks] = useState([])\r\n    const canBark = props.canBark === \"false\" ? false : true\r\n    const handleNewBark = (newBark) => {\r\n        let tempNewBarks = [...newBarks]\r\n        setNewBarks(tempNewBarks)\r\n        tempNewBarks.unshift(newBark)\r\n    }\r\n    return <div className = {props.className}>\r\n        {canBark === true && <BarkCreate didBark = {handleNewBark} className = 'col-12 mb-3' />}\r\n        <BarksList newBarks = {newBarks} {...props}/>\r\n    </div>\r\n}\r\n\r\nexport function BarkDetailComponent(props) {\r\n    const {barkId} = props\r\n    const [didLookup, setDidLookup] = useState(false)\r\n    const [bark, setBark] = useState(null)\r\n    const handleBackEndLookup = (response, status) => {\r\n        if(status === 200) {\r\n            setBark(response)\r\n        } else {\r\n            alert(\"There was an error finding your bark.\")\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(didLookup === false) {\r\n            apiBarkDetail(barkId, handleBackEndLookup)\r\n            setDidLookup(true)\r\n        }\r\n    }, [barkId, didLookup, setDidLookup])\r\n    return bark === null ? null : <Bark bark = {bark} className = {props.className} />\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {BarksComponent} from './barks'\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <BarksComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BarksComponent, BarkDetailComponent} from './barks'\nimport * as serviceWorker from './serviceWorker';\n\nconst appEl = document.getElementById('root')\nif(appEl) {\n  ReactDOM.render(<App />, appEl)\n}\n\nconst e = React.createElement\n\nconst barksEl = document.getElementById(\"idBark\")\nif(barksEl) {\n  ReactDOM.render(e(BarksComponent, barksEl.dataset), barksEl)\n}\n\nconst barkDetailElements = document.querySelectorAll(\".bark-detail\")\n\nbarkDetailElements.forEach(container => {\n  ReactDOM.render(e(BarkDetailComponent, container.dataset), container)\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}