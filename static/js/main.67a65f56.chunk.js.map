{"version":3,"sources":["logo.svg","lookup/components.js","barks/lookup.js","barks/buttons.js","profiles/components.js","barks/detail.js","barks/list.js","barks/feed.js","barks/create.js","barks/components.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backEndLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","console","log","send","apiBarkFeed","nextUrl","undefined","replace","apiBarkList","username","ActionBtn","props","bark","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackEndEvent","type","onClick","event","preventDefault","barkId","id","apiBarkAction","UserLink","children","UserDisplay","user","nameDisplay","includeFullName","first_name","last_name","Fragment","UserPicture","ParentBark","parent","Bark","isRebark","rebarker","hideActions","didRebark","useState","actionBark","setActionBark","match","pathname","urlBarkId","groups","barkid","isDetail","handlePerformAction","newActionBark","content","BarksList","barksInit","setBarksInit","barks","setBarks","setNextUrl","barksDidSet","setBarksDidSet","useEffect","final","newBarks","concat","next","results","alert","handleDidRebark","newBark","updateBarksInit","unshift","updateFinalBarks","map","item","index","key","classname","FeedList","BarkCreate","textAreaRef","React","createRef","didBark","handleBackEndUpdate","onSubmit","newVal","current","value","ref","required","BarksComponent","setNewBarks","canBark","tempNewBarks","BarkDetailComponent","didLookup","setDidLookup","setBark","handleBackEndLookup","apiBarkDetail","App","src","logo","alt","target","rel","Boolean","hostname","appEl","getElementById","ReactDOM","render","createElement","barksEl","dataset","barkFeedEl","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.67a65f56.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","function getCookie(name) {\r\n  var cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n      var cookies = document.cookie.split(';');\r\n      for (var i = 0; i < cookies.length; i++) {\r\n          var cookie = cookies[i].trim();\r\n          // Does this cookie string begin with the name we want?\r\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n              break;\r\n          }\r\n      }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nexport function backEndLookup(method, endpoint, callback, data) {\r\n  let jsonData;\r\n  if (data) {\r\n    jsonData = JSON.stringify(data)\r\n  }\r\n  const xhr = new XMLHttpRequest()\r\n  const url = `http://localhost:8000/api${endpoint}`\r\n  xhr.responseType = \"json\"\r\n  const csrftoken = getCookie('csrftoken');\r\n  xhr.open(method, url)\r\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\r\n  if(csrftoken) {\r\n    // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\r\n  }\r\n  xhr.onload = function() {\r\n    if(xhr.status === 403) {\r\n      const detail = xhr.response.detail\r\n      if(detail === \"Authentication credentials were not provided.\") {\r\n        if (window.location.href.indexOf(\"login\") === -1) {\r\n          window.location.href = \"/login?showLoginrequired=true\"\r\n        }\r\n      }\r\n    }\r\n      callback(xhr.response, xhr.status)\r\n  }\r\n  xhr.onerror = function (e) {\r\n    console.log(\"error\", e)\r\n    callback({\"message\": \"Request was an error\"}, 400)\r\n  }\r\n  xhr.send(jsonData)\r\n}","import {backEndLookup} from '../lookup'\r\n\r\nexport function apiBarkCreate(newBark, callback) {\r\n    backEndLookup(\"POST\", \"/barks/create/\", callback, {content: newBark})\r\n  \r\n}\r\n \r\nexport function apiBarkAction(barkId, action, callback) {\r\n  const data = {id: barkId, action: action}\r\n  backEndLookup(\"POST\", \"/barks/action/\", callback, data)\r\n\r\n}\r\n\r\nexport function apiBarkDetail(barkId, callback) {\r\n    backEndLookup(\"GET\", `/barks/${barkId}`, callback)\r\n}\r\n\r\nexport function apiBarkFeed(callback, nextUrl) {\r\n  let endpoint = \"/barks/feed/\"\r\n  if(nextUrl !== null && nextUrl !== undefined) {\r\n    endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n  }\r\n  backEndLookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiBarkList(username, callback, nextUrl) {\r\n  let endpoint = \"/barks/\"\r\n  if(username) {\r\n      endpoint = `/barks/?username=${username}`\r\n  }\r\n  if(nextUrl !== null && nextUrl !== undefined) {\r\n    endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n  }\r\n  backEndLookup(\"GET\", endpoint, callback)\r\n}","import React  from 'react'\r\n\r\nimport {apiBarkAction} from './lookup'\r\n\r\nexport function ActionBtn(props) {\r\n    const {bark, action, didPerformAction} = props\r\n    const likes = bark.likes ? bark.likes : 0\r\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\r\n    const actionDisplay = action.display ? action.display : 'Action'\r\n    const handleActionBackEndEvent = (response, status) => {\r\n        console.log(response, status)\r\n        if((status === 200 || status === 201) && didPerformAction) {\r\n            didPerformAction(response, status)\r\n        }\r\n    }\r\n    const handleClick = (event) => {\r\n        event.preventDefault()\r\n        apiBarkAction(bark.id, action.type, handleActionBackEndEvent)\r\n    }\r\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\r\n    return <button className = {className} onClick = {handleClick}>{display}</button>\r\n  }","import React from 'react'\r\n\r\nexport function UserLink (props) {\r\n    const {username} = props\r\n    const handleUserLink = (event) => {\r\n        window.location.href = `/profile/${username}`\r\n    }\r\n    return <span className='pointer' onClick = {handleUserLink}>\r\n        {props.children}\r\n    </span>\r\n}\r\n\r\nexport function UserDisplay(props) {\r\n    const {user, includeFullName} = props\r\n    const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name} ` : null\r\n    return <React.Fragment>\r\n        {nameDisplay} \r\n        <UserLink username={user.username}>@{user.username}</UserLink>\r\n    </React.Fragment>\r\n}\r\n\r\nexport function UserPicture (props) {\r\n    const {user} = props\r\n    return <UserLink username={user.username}><span className='mx-1 px-3 py-2 rounded-circle bg-dark text-white'>\r\n        {user.username[0]}\r\n    </span></UserLink>\r\n}","import React , {useState} from 'react'\r\nimport {ActionBtn} from './buttons'\r\n\r\nimport {UserPicture, UserDisplay} from '../profiles'\r\n\r\nexport function ParentBark(props) {\r\n    const {bark} = props\r\n    return bark.parent ? <Bark isRebark rebarker={props.rebarker} hideActions className = {' '} bark = {bark.parent} /> : null\r\n}\r\n\r\nexport function Bark(props) {\r\n    const {bark, didRebark, hideActions, isRebark, rebarker} = props\r\n    const [actionBark, setActionBark] = useState(props.bark ? props.bark : null)\r\n    let className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n    className = isRebark === true ? `${className} p-2 border rounded` : className\r\n    const path = window.location.pathname\r\n    const match = path.match(/(?<barkid>\\d+)/)\r\n    const urlBarkId = match ? match.groups.barkid : -1\r\n    const isDetail = `${bark.id}` === `${urlBarkId}`\r\n    const handleLink = (event) => {\r\n        event.preventDefault()\r\n        window.location.href = `/${bark.id}`\r\n    }\r\n    const handlePerformAction = (newActionBark, status) => {\r\n        if(status === 200) {\r\n            setActionBark(newActionBark)\r\n        } else if (status === 201) {\r\n            if(didRebark) {\r\n                didRebark(newActionBark)\r\n            }\r\n        }\r\n    }\r\n\r\n    return <div className={className}>\r\n        {isRebark === true && <div className='mb-2'> <span className='small text-muted'>Rebarked by <UserDisplay user={rebarker} /></span> </div>}\r\n        <div className='d-flex'>\r\n            <div className=''>\r\n                <UserPicture user={bark.user} />\r\n            </div>\r\n            <div className= 'col-11'>\r\n                <div>\r\n                    <p>\r\n                        <UserDisplay includeFullName user={bark.user} />\r\n                    </p>\r\n                    <p>{bark.content}</p>\r\n                    <ParentBark bark = {bark} rebarker={bark.user} />\r\n                </div>\r\n                <div className='btn btn-group px-0'>\r\n                    {(actionBark && hideActions !== true) && <React.Fragment>\r\n                        <ActionBtn bark = {actionBark} didPerformAction = {handlePerformAction} action={{type: \"like\", display:\"Likes\"}}/>\r\n                        <ActionBtn bark = {actionBark} didPerformAction = {handlePerformAction} action={{type: \"unlike\", display:\"Unlike\"}}/>\r\n                        <ActionBtn bark = {actionBark} didPerformAction = {handlePerformAction} action={{type: \"rebark\", display:\"Rebark\"}}/>\r\n                    </React.Fragment>}\r\n                    {isDetail === true ? null : <button className = 'btn btn-sm btn-outline-primary' onClick = {handleLink}>View</button>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}","import React , {useEffect, useState} from 'react'\r\nimport {apiBarkList} from './lookup'\r\nimport {Bark} from './detail'\r\n\r\nexport function BarksList(props) {\r\n    const [barksInit, setBarksInit] = useState([])\r\n    const [barks, setBarks] = useState([])\r\n    const [nextUrl, setNextUrl] = useState(null)\r\n    const [barksDidSet, setBarksDidSet] = useState(false)\r\n    useEffect(() => {\r\n        const final = [...props.newBarks].concat(barksInit)\r\n        if(final.length !== barks.length) {\r\n            setBarks(final)\r\n        }\r\n    }, [props.newBarks, barks, barksInit])\r\n    useEffect(() => {\r\n        if(barksDidSet === false) {\r\n            const handleBarkListLookup =  (response, status) => {\r\n                if(status === 200) {\r\n                    setNextUrl(response.next)\r\n                    setBarksInit(response.results)\r\n                    setBarksDidSet(true)\r\n                } else {\r\n                    alert(\"There was an error\")\r\n                }\r\n            }\r\n            apiBarkList(props.username, handleBarkListLookup)\r\n        }\r\n    }, [barksInit, barksDidSet, setBarksDidSet, props.username])\r\n\r\n    const handleDidRebark = (newBark) => {\r\n        const updateBarksInit = [...barksInit]\r\n        updateBarksInit.unshift(newBark)\r\n        setBarksInit(updateBarksInit)\r\n        const updateFinalBarks = [...barks]\r\n        updateFinalBarks.unshift(barks)\r\n        setBarks(updateFinalBarks)\r\n    }\r\n\r\n    const handleLoadNext = (event) => {\r\n        event.preventDefault()\r\n        if(nextUrl !== null) {\r\n            const handleLoadNextResponse = (response, status) => {\r\n                if(status === 200) {\r\n                    setNextUrl(response.next)\r\n                    const newBarks = [...barks].concat(response.results)\r\n                    setBarksInit(newBarks)\r\n                    setBarks(newBarks)\r\n                } else {\r\n                    alert(\"There was an error\")\r\n                }\r\n            }\r\n            apiBarkList(props.username, handleLoadNextResponse, nextUrl)\r\n        }\r\n    }\r\n\r\n    return <React.Fragment>{barks.map((item, index)=>{\r\n        return <Bark \r\n        bark = {item}\r\n        didRebark = {handleDidRebark} \r\n        className = 'my-5 py-5 border bg-white text-dark' \r\n        key = {`${index}-{item.id}`}/>\r\n    })}\r\n    {nextUrl != null && <button onClick={handleLoadNext} classname='btn btn-outline-primary'>Next Page</button>}\r\n    </React.Fragment>\r\n}","import React , {useEffect, useState} from 'react'\r\nimport {apiBarkFeed} from './lookup'\r\nimport {Bark} from './detail'\r\n\r\nexport function FeedList(props) {\r\n    const [barksInit, setBarksInit] = useState([])\r\n    const [barks, setBarks] = useState([])\r\n    const [nextUrl, setNextUrl] = useState(null)\r\n    const [barksDidSet, setBarksDidSet] = useState(false)\r\n    useEffect(() => {\r\n        const final = [...props.newBarks].concat(barksInit)\r\n        if(final.length !== barks.length) {\r\n            setBarks(final)\r\n        }\r\n    }, [props.newBarks, barks, barksInit])\r\n    useEffect(() => {\r\n        if(barksDidSet === false) {\r\n            const handleBarkListLookup =  (response, status) => {\r\n                if(status === 200) {\r\n                    setNextUrl(response.next)\r\n                    setBarksInit(response.results)\r\n                    setBarksDidSet(true)\r\n                }\r\n            }\r\n            apiBarkFeed(handleBarkListLookup)\r\n        }\r\n    }, [barksInit, barksDidSet, setBarksDidSet, props.username])\r\n\r\n    const handleDidRebark = (newBark) => {\r\n        const updateBarksInit = [...barksInit]\r\n        updateBarksInit.unshift(newBark)\r\n        setBarksInit(updateBarksInit)\r\n        const updateFinalBarks = [...barks]\r\n        updateFinalBarks.unshift(barks)\r\n        setBarks(updateFinalBarks)\r\n    }\r\n\r\n    const handleLoadNext = (event) => {\r\n        event.preventDefault()\r\n        if(nextUrl !== null) {\r\n            const handleLoadNextResponse = (response, status) => {\r\n                if(status === 200) {\r\n                    setNextUrl(response.next)\r\n                    const newBarks = [...barks].concat(response.results)\r\n                    setBarksInit(newBarks)\r\n                    setBarks(newBarks)\r\n                }\r\n            }\r\n            apiBarkFeed(handleLoadNextResponse, nextUrl)\r\n        }\r\n    }\r\n\r\n    return <React.Fragment>{barks.map((item, index)=>{\r\n        return <Bark \r\n        bark = {item}\r\n        didRebark = {handleDidRebark} \r\n        className = 'my-5 py-5 border bg-white text-dark' \r\n        key = {`${index}-{item.id}`}/>\r\n    })}\r\n    {nextUrl != null && <button onClick={handleLoadNext} classname='btn btn-outline-primary'>Next Page</button>}\r\n    </React.Fragment>\r\n}","import React from 'react'\r\nimport {apiBarkCreate} from './lookup'\r\n\r\nexport function BarkCreate(props) {\r\n    const textAreaRef = React.createRef()\r\n    const {didBark} = props\r\n    const handleBackEndUpdate = (response, status) => {\r\n        if(status === 201) {\r\n            didBark(response)\r\n        } else {\r\n            console.log(response)\r\n            alert(\"An error has occurred. Please try again.\")\r\n        }\r\n    }\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        const newVal = textAreaRef.current.value\r\n        apiBarkCreate(newVal, handleBackEndUpdate)\r\n        textAreaRef.current.value = ''\r\n    }\r\n    return <div className ={props.className}>\r\n        <form onSubmit = {handleSubmit}>\r\n            <textarea ref = {textAreaRef} required = {true} className = 'form-control' name = 'tweet'>\r\n\r\n            </textarea>\r\n            <button type = 'submit' className = 'btn btn-primary my-3'>Bark</button>\r\n        </form>\r\n    </div>\r\n}","import React , {useState, useEffect} from 'react'\r\nimport {BarksList} from './list'\r\nimport {FeedList} from './feed'\r\nimport {BarkCreate} from './create'\r\nimport {apiBarkDetail} from './lookup'\r\nimport {Bark} from './detail'\r\n\r\nexport function FeedComponent(props) {\r\n    const [newBarks, setNewBarks] = useState([])\r\n    const canBark = props.canBark === \"false\" ? false : true\r\n    const handleNewBark = (newBark) => {\r\n        let tempNewBarks = [...newBarks]\r\n        setNewBarks(tempNewBarks)\r\n        tempNewBarks.unshift(newBark)\r\n    }\r\n    return <div className = {props.className}>\r\n        {canBark === true && <BarkCreate didBark = {handleNewBark} className = 'col-12 mb-3' />}\r\n        <FeedList newBarks = {newBarks} {...props}/>\r\n    </div>\r\n}\r\n\r\nexport function BarksComponent(props) {\r\n    const [newBarks, setNewBarks] = useState([])\r\n    const canBark = props.canBark === \"false\" ? false : true\r\n    const handleNewBark = (newBark) => {\r\n        let tempNewBarks = [...newBarks]\r\n        setNewBarks(tempNewBarks)\r\n        tempNewBarks.unshift(newBark)\r\n    }\r\n    return <div className = {props.className}>\r\n        {canBark === true && <BarkCreate didBark = {handleNewBark} className = 'col-12 mb-3' />}\r\n        <BarksList newBarks = {newBarks} {...props}/>\r\n    </div>\r\n}\r\n\r\nexport function BarkDetailComponent(props) {\r\n    const {barkId} = props\r\n    const [didLookup, setDidLookup] = useState(false)\r\n    const [bark, setBark] = useState(null)\r\n    const handleBackEndLookup = (response, status) => {\r\n        if(status === 200) {\r\n            setBark(response)\r\n        } else {\r\n            alert(\"There was an error finding your bark.\")\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(didLookup === false) {\r\n            apiBarkDetail(barkId, handleBackEndLookup)\r\n            setDidLookup(true)\r\n        }\r\n    }, [barkId, didLookup, setDidLookup])\r\n    return bark === null ? null : <Bark bark = {bark} className = {props.className} />\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {BarksComponent} from './barks'\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <BarksComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {FeedComponent, BarksComponent, BarkDetailComponent} from './barks'\nimport * as serviceWorker from './serviceWorker';\n\nconst appEl = document.getElementById('root')\nif(appEl) {\n  ReactDOM.render(<App />, appEl)\n}\n\nconst e = React.createElement\n\nconst barksEl = document.getElementById(\"idBark\")\nif(barksEl) {\n  ReactDOM.render(e(BarksComponent, barksEl.dataset), barksEl)\n}\n\nconst barkFeedEl = document.getElementById(\"idBark-feed\")\nif(barkFeedEl) {\n  ReactDOM.render(e(FeedComponent, barkFeedEl.dataset), barkFeedEl)\n}\n\nconst barkDetailElements = document.querySelectorAll(\".bark-detail\")\n\nbarkDetailElements.forEach(container => {\n  ReactDOM.render(e(BarkDetailComponent, container.dataset), container)\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}